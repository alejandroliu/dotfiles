#!/bin/sh
#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '

alias moer=more
alias mroe=more

export DOTS=$HOME/.dotfiles

[ -d $DOTS/pkgs/ecd ] && . $DOTS/pkgs/ecd/cd.sh
if [ -d $DOTS/pkgs/ashlib ] ; then
  export ASHLIB=$DOTS/pkgs/ashlib
  alias shdoc=$ASHLIB/shdoc
  alias ashlib=$ASHLIB/ashlib
  alias shlog=$ASHLIB/shlog
fi

if [ -d $DOTS/pkgs/mptcl ] ; then
  alias mpt="wish $DOTS/pkgs/mptcl/d_mplayer.tcl"
  alias edl="wish $DOTS/pkgs/mptcl/d_edl.tcl"
fi

[ -d $DOTS/pkgs/SimpleDeftNote ] \
    && alias sdn="perl $DOTS/pkgs/SimpleDeftNote/sdn.pl"
[ -d $DOTS/pkgs/markdown ] \
    && alias markdown="php $DOTS/pkgs/markdown/markdown"
if [ -d $DOTS/pkgs/tlkit ] ; then
  alias lnpkg="$DOTS/pkgs/tlkit/lnpkg"
  alias manify="$DOTS/pkgs/tlkit/manify"
  alias perlmods="$DOTS/pkgs/tlkit/perlmods"
  alias pwcrypt="$DOTS/pkgs/tlkit/pwcrypt"
fi

alias mg=emacs
emacs() {
  if [ -z "$DISPLAY" ] ; then
    command emacs "$@"
    return $?
  fi
  local server=$DISPLAY userid=$(id -u)
  local socket=/tmp/emacs$userid/$server

  if [ ! -e $socket ] ; then
    command emacs --daemon=$server || return 1
    local cnt=0
    while [ ! -e $socket ]
    do
      if [ $cnt -gt 10 ] ; then
	echo "Failed to start server"
	command emacs "$@"
	return $?
      fi
      cnt=$(expr $cnt + 1)
      sleep 1
    done
  fi

  local nw=-c
  if type wmctrl >/dev/null 2>&1  ; then
    if [ $(wmctrl -lx | grep 'emacs' | wc -l) -gt 0 ] ; then
      nw=""
      wmctrl -xa emacs
    fi
  fi
  emacsclient -s $server $nw --no-wait "$@"
  return $?
}

#if [ -z $LTPATH ] ; then
#  if [ -d $HOME/local/pkgs ] ; then
#    export LTPATH=$HOME/local/pkgs
#    export PATH=$PATH:$HOME/local/bin
#    if [ -d $HOME/local/man ] ; then
#      [ -z $MANPATH ] && MANPATH=$(manpath)
#      export MANPATH=$MANPATH:$HOME/local/man
#    fi
#  fi
#fi
